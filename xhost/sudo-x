#!/bin/bash
USER=$1
COMMAND=("${@:2}")
if [ -z "$USER" ] || [ -z "$COMMAND" ]
then
        echo 'Not enough parameters:'
        echo 'sudo-x user command [command parameters]'
        exit 1
fi

exitWithErrorMessage()
{
	echo $1
	exit 1
}

doesFileBelongToUser()
{
	FILE=$1
	USER=$2
	FILE_OWNER=$(stat -c %U "$FILE")
	if [ "$FILE_OWNER" == "$USER" ]
	then
		return 0
	else
		return 1
	fi
}

cleanInactivePIDFiles()
{
	LOCK_FOLDER=$1
	USER=$2
	for pid in $(ls "$LOCK_FOLDER")
	do
		PROC_DIR="/proc/$pid"
		if [ ! -d "$PROC_DIR" ] || ! doesFileBelongToUser "$PROC_DIR" "$USER"
		then
			rm "$LOCK_FOLDER/$pid"
		fi
	done
}

TMP_FOLDER=/dev/shm

LOCK_FOLDER=$TMP_FOLDER/xhost-locks.$(whoami).$USER/
if [ ! -d "$LOCK_FOLDER" ]
then
	mkdir "$LOCK_FOLDER" || exitWithErrorMessage "Error: Could not create lock folder"
else
	cleanInactivePIDFiles "$LOCK_FOLDER" $(whoami)
fi

INSTANCE_LOCK_FILE="$LOCK_FOLDER/$$"

isLockFolderEmpty()
{
	DIR_LISTING=$(ls "$LOCK_FOLDER")
	if [ -z "$DIR_LISTING" ]
	then
		return 0
	else
		return 1
	fi
}

if isLockFolderEmpty
then
	xhost +SI:localuser:$USER
fi
touch "$INSTANCE_LOCK_FILE" || exitWithErrorMessage "Error: Could not create lock file"

sudo -H -u "$USER" "${COMMAND[@]}"

rm "$INSTANCE_LOCK_FILE"
if isLockFolderEmpty
then
	xhost -SI:localuser:$USER
	rmdir $LOCK_FOLDER
fi
